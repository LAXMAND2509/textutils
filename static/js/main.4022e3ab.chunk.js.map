{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextFrom.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","modeText","onClick","toggleMode","htmlFor","TextFrom","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","showAlert","split","length","defaultProps","about","App","setMode","_useState3","_useState4","setmodeText","_useState5","_useState6","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4022e3ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && \r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'r  eact-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg bg-body-${props.mode} navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.modeText}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Dark Mode enable</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    about: 'Set about here'\r\n};","import React,{useState} from \"react\"\r\n\r\nexport default function TextFrom(props) {\r\n    const handleUpClick = ()=>{\r\n        setText(text.toUpperCase()); // to uppercase it.\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleUpClickl = ()=>{\r\n        setText(text.toLowerCase()); // to uppercase it.\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearText = ()=>{\r\n        setText(''); // to uppercase it.\r\n        props.showAlert(\"Empty\",\"success\");\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        console.log(\"handle on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    // setText(\"Enter your state\") // the way to change the text value\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode ==='dark'?'white':'black'}}>\r\n            <h1>{props.heading} </h1>\r\n            <div className=\"mb-3\">\r\n                {/* <label htmlfor=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor : props.mode ==='dark'?'rgb(16 14 12 / 40%)':'white',color : props.mode ==='dark'?'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"3\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClickl}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>Clear text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color : props.mode ==='dark'?'white':'black'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","\nimport React, { useState, Component } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar.js'\nimport TextForm from './components/TextFrom.js'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [modeText, setmodeText] = useState('dark');\n\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      setmodeText('light');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark mode has been enables\", \"success\");\n      document.title = \"TextUtiles - Home - Dark mode\";\n    }\n    else {\n      setMode('light');\n      setmodeText('dark');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enables\", \"success\");\n      document.title = \"TextUtiles - Home - Light mode\";\n    }\n  }\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title = \"TextUtils2\" about = \"About TextUtils\"/> */}\n        {/* <Navbar /> */}\n        <Navbar title='TextUtils' mode={mode} modeText={modeText} toggleMode={toggleMode}></Navbar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n        {/* <About/> */}\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\"element = {<About/>} > */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\" element ={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />}>\n          </Route> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}> </TextForm>\n        {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}